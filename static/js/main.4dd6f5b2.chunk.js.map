{"version":3,"sources":["componenets/Navbar.js","componenets/useInfiniteScroll.js","componenets/List.js","componenets/Search.js","componenets/PokemonView.js","componenets/PokemonContainer.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","className","to","Math","ceil","random","useInfiniteScroll","callback","useState","isFetching","setIsFetching","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","addEventListener","removeEventListener","List","list","Array","from","keys","n","listItems","setListItems","setTimeout","prevState","length","map","listItem","injectSheet","wrapper","display","flexWrap","justifyContent","card","margin","width","transform","imageWrapper","height","alignItems","cardContent","flexDirection","stats","padding","minWidth","textAlign","classes","isLoading","setIsLoading","pokemon","setPokemon","searchTerm","setSearchTerm","axios","get","then","res","data","results","searchResults","filter","mon","name","includes","pokeNr","pokemonList","index","id","url","match","key","cn","cardImage","slice","placeholder","value","onChange","e","target","type","title","marginTop","healthBar","border","minHeight","image","maxWidth","table","props","colors","slot","src","alt","weight","PokemonContainer","params","pokemon_name","a","b","str","toString","heightConverter","substring","weightConverter","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","types","App","pathname","useLocation","exact","path","component","Search","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4dd6f5b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className='nav-wrapper red darken-3'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<NavLink to='/react-pokedex' className='left brand-logo'>\r\n\t\t\t\t\tReact-Dex\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<ul className='right'>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to='/react-pokedex'>Search</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to={`/react-pokedex/${Math.ceil(Math.random() * 801)}`}>\r\n\t\t\t\t\t\t\tRandom\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useInfiniteScroll = callback => {\r\n\tconst [isFetching, setIsFetching] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"scroll\", handleScroll);\r\n\t\treturn () => window.removeEventListener(\"scroll\", handleScroll);\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isFetching) return;\r\n\t\tcallback();\r\n\t\t// eslint-disable-next-line\r\n\t}, [isFetching]);\r\n\r\n\tfunction handleScroll() {\r\n\t\tif (\r\n\t\t\twindow.innerHeight + document.documentElement.scrollTop !==\r\n\t\t\t\tdocument.documentElement.offsetHeight ||\r\n\t\t\tisFetching\r\n\t\t)\r\n\t\t\treturn;\r\n\t\tsetIsFetching(true);\r\n\t}\r\n\r\n\treturn [isFetching, setIsFetching];\r\n};\r\n\r\nexport default useInfiniteScroll;\r\n","import React, { useState } from \"react\";\r\nimport useInfiniteScroll from \"./useInfiniteScroll\";\r\n\r\nconst List = ({ list }) => {\r\n\tconst [listItems, setListItems] = useState(\r\n\t\tArray.from(Array(151).keys(), n => n + 1)\r\n\t);\r\n\t// eslint-disable-next-line\r\n\tconst [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\r\n\r\n\tfunction fetchMoreListItems() {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetListItems(prevState => [\r\n\t\t\t\t...prevState,\r\n\t\t\t\t...Array.from(Array(151).keys(), n => n + prevState.length + 1),\r\n\t\t\t]);\r\n\t\t\tsetIsFetching(false);\r\n\t\t}, 1500);\r\n\t}\r\n\r\n\treturn <>{listItems.map(listItem => list[listItem - 1])}</>;\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport injectSheet from \"react-jss\";\r\nimport cn from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../pokemon.css\";\r\nimport List from \"./List\";\r\n\r\nconst Search = ({ classes }) => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [pokemon, setPokemon] = useState([]);\r\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (pokemon.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetIsLoading(true);\r\n\t\taxios.get(\"https://pokeapi.co/api/v2/pokemon?limit=801\").then(res => {\r\n\t\t\tsetPokemon(res.data.results);\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tconst onChange = e => {\r\n\t\tsetSearchTerm(e.target.value);\r\n\t};\r\n\r\n\tlet searchResults = pokemon.filter(mon => mon.name.includes(searchTerm));\r\n\tlet results;\r\n\tsearchTerm.length > 0 ? (results = searchResults) : (results = pokemon);\r\n\r\n\tconst pokeNr = /[^v2][0-9]{1,3}/g;\r\n\r\n\tconst pokemonList = !isLoading ? (\r\n\t\tresults.map((mon, index) => {\r\n\t\t\tlet id = mon.url.match(pokeNr);\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tclassName='black-text'\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tto={`react-pokedex/${mon.name}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={cn(\"post card z-depth-2\", classes.card)}>\r\n\t\t\t\t\t\t<div className={cn(classes.imageWrapper, \"red lighten-5\")}>\r\n\t\t\t\t\t\t\t<div className='spriteWrapper'>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={cn(`menu-sprite ${mon.name}`, classes.cardImage)}\r\n\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className={cn(\"card-content\", classes.cardContent)}>\r\n\t\t\t\t\t\t\t\t<h5 className='center'>#{id[0].slice(1)}</h5>\r\n\t\t\t\t\t\t\t\t<div className='card-title center'>{mon.name}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t})\r\n\t) : (\r\n\t\t<div>loading</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h4 className='center'>Search</h4>\r\n\t\t\t<input\r\n\t\t\t\tplaceholder='Search'\r\n\t\t\t\tvalue={searchTerm}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\ttype='text'\r\n\t\t\t/>\r\n\r\n\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t{searchTerm.length > 0 ? pokemonList : <List list={pokemonList} />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst styles = {\r\n\twrapper: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tcard: {\r\n\t\tmargin: \"12px\",\r\n\t\twidth: \"260px\",\r\n\t\t\"&:hover\": {\r\n\t\t\ttransform: \"scale(1.02)\",\r\n\t\t},\r\n\t},\r\n\timageWrapper: {\r\n\t\tdisplay: \"flex\",\r\n\t\theight: \"200px\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcardContent: {\r\n\t\theight: 188,\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t},\r\n\tstats: {\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"center\",\r\n\t\t\"&> li\": {\r\n\t\t\tpadding: 10,\r\n\t\t\tminWidth: 79,\r\n\t\t\ttextAlign: \"center\",\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport default injectSheet(styles)(Search);\r\n","import React from \"react\";\r\nimport injectSheet from \"react-jss\";\r\nimport cn from \"classnames\";\r\n\r\nconst PokemonView = props => {\r\n\tconst { classes } = props;\r\n\tconst type = props.type.map(type => {\r\n\t\treturn (\r\n\t\t\t<div className={props.colors[type.type.name]} key={type.slot}>\r\n\t\t\t\t{type.type.name}\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\tprops.colors[props.type[0].type.name],\r\n\t\t\t\t\tclasses.imageWrapper\r\n\t\t\t\t)}\r\n\t\t\t>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={cn(classes.image, \"container\")}\r\n\t\t\t\t\tsrc={`https://pokeres.bastionbot.org/images/pokemon/${props.id}.png`}\r\n\t\t\t\t\talt={props.name}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h2 className={cn(classes.title, \"center\")}>{props.name}</h2>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\tprops.colors[props.type[0].type.name],\r\n\t\t\t\t\t\tclasses.healthBar\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='center'>HP 160</div>\r\n\r\n\t\t\t\t<table className='striped centered'>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t\t<th>Weight</th>\r\n\t\t\t\t\t\t\t<th>Height</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>{type}</td>\r\n\t\t\t\t\t\t\t<td>{props.weight}</td>\r\n\t\t\t\t\t\t\t<td>{props.height}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst styles = {\r\n\ttitle: {\r\n\t\tmarginTop: 0,\r\n\t},\r\n\thealthBar: {\r\n\t\theight: \"12px\",\r\n\t\twidth: \"50%\",\r\n\t\tmargin: \"auto\",\r\n\t\tborder: \"1px solid green\",\r\n\t},\r\n\timageWrapper: {\r\n\t\twidth: \"100%\",\r\n\t\tpadding: \"2em\",\r\n\t\tminHeight: \"375px\",\r\n\t\t\"@media (min-width: 600px)\": {\r\n\t\t\tminHeight: \"600px\",\r\n\t\t},\r\n\t},\r\n\timage: {\r\n\t\twidth: \"100%\",\r\n\t\tmaxWidth: 500,\r\n\t\tdisplay: \"block\",\r\n\t\tmargin: \"auto\",\r\n\t},\r\n\ttable: {\r\n\t\tpadding: \"20rem\",\r\n\t},\r\n};\r\n\r\nexport default injectSheet(styles)(PokemonView);\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PokemonView from \"./PokemonView\";\r\n\r\nconst PokemonContainer = props => {\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [pokemon, setPokemon] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst id = props.match.params.pokemon_name;\r\n\t\taxios.get(`https://pokeapi.co/api/v2/pokemon/${id}`).then(res => {\r\n\t\t\tsetPokemon(res.data);\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tconst colors = {\r\n\t\tbug: \"green white-text\",\r\n\t\tdark: \"blue-grey darken-4 white-text\",\r\n\t\tdragon: \"cyan lighten-3\",\r\n\t\telectric: \"yellow\",\r\n\t\tfairy: \"pink accent-2\",\r\n\t\tfighting: \"orange darken-2\",\r\n\t\tfire: \"red\",\r\n\t\tflying: \"blue-grey lighten-3\",\r\n\t\tghost: \"indigo lighten-3\",\r\n\t\tgrass: \"light-green accent-2\",\r\n\t\tground: \"brown white-text\",\r\n\t\tice: \"cyan lighten-5\",\r\n\t\tnormal: \"deep-purple lighten-5\",\r\n\t\tpoison: \"deep-purple lighten-2 white-text\",\r\n\t\tpsychic: \"purple accent-2\",\r\n\t\trock: \"brown darken-2 white-text\",\r\n\t\tsteel: \"teal lighten-3\",\r\n\t\twater: \"light-blue white-text\",\r\n\t};\r\n\r\n\tconst heightConverter = height => {\r\n\t\tif (height < 10) {\r\n\t\t\treturn `0.${height}m`;\r\n\t\t} else {\r\n\t\t\tlet a;\r\n\t\t\tlet b;\r\n\t\t\tlet str = height.toString();\r\n\t\t\ta = str.toString().slice(0, 1);\r\n\t\t\tb = str.toString().slice(1, str.length);\r\n\t\t\treturn `${a}.${b}m`;\r\n\t\t}\r\n\t};\r\n\tconst weightConverter = weight => {\r\n\t\tif (weight < 10) {\r\n\t\t\treturn `0.${weight}kg`;\r\n\t\t} else {\r\n\t\t\tlet a;\r\n\t\t\tlet b;\r\n\t\t\tlet str = weight.toString();\r\n\t\t\ta = str.slice(0, str.length - 1);\r\n\t\t\tb = str.substring(str.length - 1, str.length);\r\n\t\t\tif (b.includes(\"0\")) {\r\n\t\t\t\treturn `${a}kg`;\r\n\t\t\t} else {\r\n\t\t\t\treturn `${a}.${b}kg`;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<div>Loading</div>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t<PokemonView\r\n\t\t\t\theight={heightConverter(pokemon.height)}\r\n\t\t\t\tweight={weightConverter(pokemon.weight)}\r\n\t\t\t\tcolors={colors}\r\n\t\t\t\tname={pokemon.name}\r\n\t\t\t\tid={pokemon.id}\r\n\t\t\t\ttype={pokemon.types}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PokemonContainer;\r\n","import React from \"react\";\nimport Navbar from \"./componenets/Navbar\";\nimport {\n\tBrowserRouter,\n\tRedirect,\n\tRoute,\n\tSwitch,\n\tuseLocation,\n} from \"react-router-dom\";\nimport Search from \"./componenets/Search\";\nimport PokemonContainer from \"./componenets/PokemonContainer\";\n\nconst App = () => {\n\tconst { pathname } = useLocation();\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div>\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Redirect from='/:url*(/+)' to={pathname.slice(0, -1)} />\n\t\t\t\t\t<Route exact path='/react-pokedex' component={Search} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/react-pokedex/:pokemon_name'\n\t\t\t\t\t\tcomponent={PokemonContainer}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route component={Search} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}